{{#section 'styles'}}
<link rel="stylesheet" href="css/loja.css">
{{/section}}

 <!-- modelos de livros na lista e no carrinho -->
    <!-- O querido que escreveu esse código primeiro, me paga -->
    <div class="models">

        <!-- livro na lista -->

        <!-- Lembrar de renomear todas as classes com livro e torcer para dar certo -->
        <div class="book-item">
            <a href="">
                <div class="book-item--img"><img src="" /></div>
                <div class="book-item--add">+</div>
            </a>

            <div class="book-item--price">R$ --</div>
            <div class="book-item--name">--</div>
            <div class="book-item--desc">--</div>
        </div>

        <!-- livros no carrinho -->
        <div class="cart--item">
            <img src="" />
            <div class="cart--item-nome">--</div>
            <div class="cart--item--qtarea">
                <button class="cart--item-qtmenos">-</button>
                <div class="cart--item--qt">1</div>
                <button class="cart--item-qtmais">+</button>
            </div>
        </div>

    </div>
    <!-- /models -->

 

    <!-- conteudo principal -->
    <main>

        <h2 class="h2"></h2>

        <div class="book-area"></div>
    </main>
    <!-- /conteudo principal -->

    <!-- aside do carrinho -->
    <aside>
        <div class="cart--area">
            <!-- Tenho quase certeza que esse botão de fechar não funciona -->
            <div class="menu-closer">❌</div>
            <h1 class="h1">Suas livros</h1>
            <div class="cart"></div>
            <div class="cart--details">
                <div class="cart--totalitem subtotal">
                    <span>Subtotal</span>
                    <span>R$ --</span>
                </div>
                <div class="cart--totalitem desconto">
                    <span>Desconto</span>
                    <span>R$ --</span>
                </div>
                <div class="cart--totalitem total big">
                    <span>Total</span>
                    <span>R$ --</span>
                </div>
                <div class="cart--finalizar">Finalizar a compra</div>
            </div>
        </div>
    </aside>
    <!-- /aside do carrinho -->

    <!-- janela modal .bookWindowArea -->
    <div class="bookWindowArea">
        <div class="bookWindowBody">
            <div class="bookInfo--cancelMobileButton">Voltar</div>
            <div class="bookBig">
                <img src="" />
            </div>
            <div class="bookInfo">
                <h1 class="h1">--</h1>
                <div class="bookInfo--desc">--</div>
                <div class="bookInfo--sizearea">
                    <div class="bookInfo--sector">Modelo</div>
                    <div class="bookInfo--sizes">
                        <div data-key="D" class="bookInfo--size">CAPA DURA <span>--</span></div>
                        <div data-key="C" class="bookInfo--size">CAPA COMUM <span>--</span></div>
                        <div data-key="E" class="bookInfo--size selected">E-BOOK <span>--</span></div>
                    </div>
                </div>
                <div class="bookInfo--pricearea">
                    <div class="bookInfo--sector">Preço</div>
                    <div class="bookInfo--price">
                        <div class="bookInfo--actualPrice">R$ --</div>
                        <div class="bookInfo--qtarea">
                            <button class="bookInfo--qtmenos">-</button>
                            <div class="bookInfo--qt">1</div>
                            <button class="bookInfo--qtmais">+</button>
                        </div>
                    </div>
                </div>
                <div class="bookInfo--addButton">Adicionar ao carrinho</div>
                <div class="bookInfo--cancelButton">Cancelar</div>
            </div>
        </div>
    </div>
    
<script>
    // Restante do seu código do lado do cliente...
let modalKey = 0;
let quantBooks = 1;
let cart = [];

const seleciona = (elemento) => document.querySelector(elemento);
const selecionaTodos = (elemento) => document.querySelectorAll(elemento);

const formatoReal = (valor) => {
    return valor.toLocaleString('pt-BR', { style: 'currency', currency: 'BRL' })
}

const formatoMonetario = (valor) => {
    if (valor) {
        return valor.toFixed(2)
    }
}

const abrirModal = () => {
    seleciona('.bookWindowArea').style.opacity = 0 // transparente
    seleciona('.bookWindowArea').style.display = 'flex'
    setTimeout(() => seleciona('.bookWindowArea').style.opacity = 1, 150)
}

const fecharModal = () => {
    seleciona('.bookWindowArea').style.opacity = 0 // transparente
    setTimeout(() => seleciona('.bookWindowArea').style.display = 'none', 500)
}

const botoesFechar = () => {
    // BOTOES FECHAR MODAL
    selecionaTodos('.bookInfo--cancelButton, .bookInfo--cancelMobileButton').forEach((item) => item.addEventListener('click', fecharModal))
}

const preencheDadosDasBook = (bookItem, item, index) => {
    // aula 05
    // setar um atributo para identificar qual elemento foi clicado
    bookItem.setAttribute('data-key', index)
    bookItem.querySelector('.book-item--img img').src = item.img
    bookItem.querySelector('.book-item--price').innerHTML = formatoReal(item.price[2])
    bookItem.querySelector('.book-item--name').innerHTML = item.name
    bookItem.querySelector('.book-item--desc').innerHTML = item.description
}

const preencheDadosModal = (item) => {
    seleciona('.bookBig img').src = item.img
    seleciona('.bookInfo h1').innerHTML = item.name
    seleciona('.bookInfo--desc').innerHTML = item.description
    seleciona('.bookInfo--actualPrice').innerHTML = formatoReal(item.price[2])
}

// aula 05
const pegarKey = (e) => {
    // .closest retorna o elemento mais proximo que tem a class que passamos
    // do .book-item ele vai pegar o valor do atributo data-key
    let key = e.target.closest('.book-item').getAttribute('data-key')
    console.log('Book clicada ' + key)
    console.log(bookJson[key])

    // garantir que a quantidade inicial de book é 1
    quantBooks = 1

    // Para manter a informação de qual book foi clicada
    modalKey = key

    return key
}

const preencherTamanhos = (key) => {
    // tirar a selecao de tamanho atual e selecionar o tamanho grande
    seleciona('.bookInfo--size.selected').classList.remove('selected')

    // selecionar todos os tamanhos
    selecionaTodos('.bookInfo--size').forEach((size, sizeIndex) => {
        // selecionar o tamanho grande
        (sizeIndex == 2) ? size.classList.add('selected') : ''
        size.querySelector('span').innerHTML = bookJson[key].sizes[sizeIndex]
    })
}

const escolherTamanhoPreco = (key) => {
    // Ações nos botões de tamanho
    // selecionar todos os tamanhos
    selecionaTodos('.bookInfo--size').forEach((size, sizeIndex) => {
        size.addEventListener('click', (e) => {
            // clicou em um item, tirar a selecao dos outros e marca o q vc clicou
            // tirar a selecao de tamanho atual e selecionar o tamanho grande
            seleciona('.bookInfo--size.selected').classList.remove('selected')
            // marcar o que vc clicou, ao inves de usar e.target use size, pois ele é nosso item dentro do loop
            size.classList.add('selected')

            // mudar o preço de acordo com o tamanho
            seleciona('.bookInfo--actualPrice').innerHTML = formatoReal(bookJson[key].price[sizeIndex])
        })
    })
}

const mudarQuantidade = () => {
    // Ações nos botões + e - da janela modal
    seleciona('.bookInfo--qtmais').addEventListener('click', () => {
        quantBooks++
        seleciona('.bookInfo--qt').innerHTML = quantBooks
    })

    seleciona('.bookInfo--qtmenos').addEventListener('click', () => {
        if (quantBooks > 1) {
            quantBooks--
            seleciona('.bookInfo--qt').innerHTML = quantBooks
        }
    })
}
// /aula 05

// aula 06
const adicionarNoCarrinho = () => {
    seleciona('.bookInfo--addButton').addEventListener('click', () => {
        console.log('Adicionar no carrinho')

        // pegar dados da janela modal atual
        // qual book? pegue o modalKey para usar bookJson[modalKey]
        console.log("Book " + modalKey)
        // tamanho
        let size = seleciona('.bookInfo--size.selected').getAttribute('data-key')
        console.log("Tamanho " + size)
        // quantidade
        console.log("Quant. " + quantBooks)
        // preco
        let price = seleciona('.bookInfo--actualPrice').innerHTML.replace('R$&nbsp;', '')

        // crie um identificador que junte id e tamanho
        // concatene as duas informacoes separadas por um símbolo, vc escolhe
        let identificador = bookJson[modalKey].id + 't' + size

        // antes de adicionar verifique se ja tem aquele codigo e tamanho
        // para adicionarmos a quantidade
        let key = cart.findIndex((item) => item.identificador == identificador)
        console.log(key)

        if (key > -1) {
            // se encontrar aumente a quantidade
            cart[key].qt += quantBooks
        } else {
            // adicionar objeto book no carrinho
            let book = {
                identificador,
                id: bookJson[modalKey].id,
                size, // size: size
                qt: quantBooks,
                price: parseFloat(price) // price: price
            }
            cart.push(book)
            console.log(book)
            console.log('Sub total R$ ' + (book.qt * book.price).toFixed(2))
        }

        fecharModal()
        abrirCarrinho()
        atualizarCarrinho()
    })
}

const abrirCarrinho = () => {
    console.log('Qtd de itens no carrinho ' + cart.length)
    if (cart.length > 0) {
        // mostrar o carrinho
        seleciona('aside').classList.add('show')
        seleciona('header').style.display = 'flex' // mostrar barra superior
    }

    // exibir aside do carrinho no modo mobile
    seleciona('.menu-openner').addEventListener('click', () => {
        if (cart.length > 0) {
            seleciona('aside').classList.add('show')
            seleciona('aside').style.left = '0'
        }
    })
}

const fecharCarrinho = () => {
    // fechar o carrinho com o botão X no modo mobile
    seleciona('.menu-closer').addEventListener('click', () => {
        seleciona('aside').style.left = '100vw' // usando 100vw ele ficara fora da tela
        seleciona('header').style.display = 'flex'
    })
}

const atualizarCarrinho = () => {
    // exibir número de itens no carrinho
    seleciona('.menu-openner span').innerHTML = cart.length

    // mostrar ou nao o carrinho
    if (cart.length > 0) {

        // mostrar o carrinho
        seleciona('aside').classList.add('show')

        // zerar meu .cart para nao fazer insercoes duplicadas
        seleciona('.cart').innerHTML = ''

        // crie as variaveis antes do for
        let subtotal = 0
        let desconto = 0
        let total = 0

        // para preencher os itens do carrinho, calcular subtotal
        for (let i in cart) {
            // use o find para pegar o item por id
            let bookItem = bookJson.find((item) => item.id == cart[i].id)
            console.log(bookItem)

            // em cada item pegar o subtotal
            subtotal += cart[i].price * cart[i].qt
            //console.log(cart[i].price)

            // fazer o clone, exibir na telas e depois preencher as informacoes
            let cartItem = seleciona('.models .cart--item').cloneNode(true)
            seleciona('.cart').append(cartItem)

            let bookSizeName = cart[i].size

            let bookName = `${bookItem.name} (${bookSizeName})`

            // preencher as informacoes
            cartItem.querySelector('img').src = bookItem.img
            cartItem.querySelector('.cart--item-nome').innerHTML = bookName
            cartItem.querySelector('.cart--item--qt').innerHTML = cart[i].qt

            // selecionar botoes + e -
            cartItem.querySelector('.cart--item-qtmais').addEventListener('click', () => {
                console.log('Clicou no botão mais')
                // adicionar apenas a quantidade que esta neste contexto
                cart[i].qt++
                // atualizar a quantidade
                atualizarCarrinho()
            })

            cartItem.querySelector('.cart--item-qtmenos').addEventListener('click', () => {
                console.log('Clicou no botão menos')
                if (cart[i].qt > 1) {
                    // subtrair apenas a quantidade que esta neste contexto
                    cart[i].qt--
                } else {
                    // remover se for zero
                    cart.splice(i, 1)
                }

                (cart.length < 1) ? seleciona('header').style.display = 'flex' : ''

                // atualizar a quantidade
                atualizarCarrinho()
            })

            seleciona('.cart').append(cartItem)

        } // fim do for

        // fora do for
        // calcule desconto 10% e total
        //desconto = subtotal * 0.1
        desconto = subtotal * 0
        total = subtotal - desconto

        // exibir na tela os resultados
        // selecionar o ultimo span do elemento
        seleciona('.subtotal span:last-child').innerHTML = formatoReal(subtotal)
        seleciona('.desconto span:last-child').innerHTML = formatoReal(desconto)
        seleciona('.total span:last-child').innerHTML = formatoReal(total)

    } else {
        // ocultar o carrinho
        seleciona('aside').classList.remove('show')
        seleciona('aside').style.left = '100vw'
    }
}

const finalizarCompra = () => {
    seleciona('.cart--finalizar').addEventListener('click', () => {
        console.log('Finalizar compra')
        seleciona('aside').classList.remove('show')
        seleciona('aside').style.left = '100vw'
        seleciona('header').style.display = 'flex'
    })
}

// /aula 06

// MAPEAR bookJson para gerar lista de books
bookJson.map((item, index) => {
    //console.log(item)
    let bookItem = document.querySelector('.models .book-item').cloneNode(true)
    //console.log(bookItem)
    //document.querySelector('.book-area').append(bookItem)
    seleciona('.book-area').append(bookItem)

    // preencher os dados de cada book
    preencheDadosDasBook(bookItem, item, index)

    // book clicada
    bookItem.querySelector('.book-item a').addEventListener('click', (e) => {
        e.preventDefault()
        console.log('Clicou no book')

        // aula 05
        let chave = pegarKey(e)
        // /aula 05

        // abrir janela modal
        abrirModal()

        // preenchimento dos dados
        preencheDadosModal(item)

        // aula 05
        // pegar tamanho selecionado
        preencherTamanhos(chave)

        // definir quantidade inicial como 1
        seleciona('.bookInfo--qt').innerHTML = quantBooks

        // selecionar o tamanho e preco com o clique no botao
        escolherTamanhoPreco(chave)
        // /aula 05

    })

    botoesFechar()

}) // fim do MAPEAR bookJson para gerar lista de books

// aula 05
// mudar quantidade com os botoes + e -
mudarQuantidade()
// /aula 05

// aula 06
adicionarNoCarrinho()
atualizarCarrinho()
fecharCarrinho()
finalizarCompra()
</script>